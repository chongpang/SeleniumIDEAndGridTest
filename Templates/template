package ${packageName};

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.Platform;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

@RunWith(Parameterized.class)
public class ${className} {
  private RemoteWebDriver driver;
  private boolean acceptNextAlert = true;
  private String baseUrl;
  private StringBuffer verificationErrors = new StringBuffer();
  private DesiredCapabilities capabilities;

  @Parameters
  public static List<String[]> parameters() {
      List<String[]> browsers = new ArrayList<String[]>();
      browsers.add(new String[] { Platform.WINDOWS.toString(), "firefox", "31" });
      //browsers.add(new String[] { Platform.MAC.toString(), "safari", "6" });
      browsers.add(new String[] { Platform.WINDOWS.toString(), "chrome", "36" });
      browsers.add(new String[] { Platform.WINDOWS.toString(), "internet explorer", "11" });
      return browsers;
  }

  public ${className} (String platform, String browser, String version) {
      capabilities = new DesiredCapabilities();
      capabilities.setPlatform(Platform.valueOf(platform));
      capabilities.setBrowserName(browser);
      capabilities.setVersion(version);
  }

  @Before
  public void setUp() throws Exception {
      driver = new RemoteWebDriver(capabilities);
      baseUrl = "${baseURL}";
      driver.manage().timeouts().implicitlyWait(100, TimeUnit.SECONDS);
  }

  @Test
  public void ${methodName}() throws Exception {
